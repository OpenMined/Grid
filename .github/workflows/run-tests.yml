name: Run tests

on:
  push:
    branches:
    - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Grid Node dependencies 
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        working_directory: apps/node
        command: install

    - name: Install Grid Network dependencies
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        working_directory: apps/network
        command: install

    - name: Lint with flake8
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        command: run flake8 --config=.flake8 --exclude src/syft .

    - name: Run Black
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        command: run black --check --verbose --exclude src/syft .

    - name: Run Docformatter
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        command: run docformatter --check --recursive .

    - name: Grid Node unit tests
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        working_directory: apps/node
        command: run coverage run -m pytest -v tests

    - name: Grid Network unit tests
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        working_directory: apps/network
        command: run coverage run -m pytest -v tests

    - name: Integration tests
      uses: hericlesme/PyPoetry@0.0.1
      with:
        python_version: ${{ matrix.python-version }}
        poetry_version: 1.0
        command: run coverage run -m pytest -v tests

  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged

    steps:
      - name: checkout
        if: github.event.pull_request.merged
        uses: actions/checkout@v1
        with:
          ref: dev
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build images
        run: |
          sudo apt install gcc
          docker build . --file ./app/websocket/Dockerfile --tag openmined/grid-node:latest
          docker build . --file ./gateway/Dockerfile --tag openmined/grid-gateway:latest
      - name: Push images
        run: |
          docker push openmined/grid-node:latest
          docker push openmined/grid-gateway:latest
