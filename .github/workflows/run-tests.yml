name: Run tests

on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install poetry==1.0

      - name: Test Grid Node
        run: |
          cd ./apps/node/

          # Install dependencies
          poetry install

          # Run black
          poetry run black --check --verbose --exclude src/syft .

          # Run docformatter
          poetry run docformatter --check --recursive .

          # Run unit tests
          poetry run coverage run -m pytest -v tests

      - name: Test Grid Network
        run: |
          cd ./apps/network/

          # Install dependencies
          poetry install

          # Run black
          poetry run black --check --verbose --exclude src/syft .

          # Run docformatter
          poetry run docformatter --check --recursive .

          # Run unit tests
          poetry run coverage run -m pytest -v tests

      - name: Test Grid Worker
      run: |
        cd ./apps/worker/

        # Install dependencies
        poetry install

        # Run black
        poetry run black --check --verbose --exclude src/syft .

        # Run docformatter
        poetry run docformatter --check --recursive .

        # Run unit tests
        poetry run coverage run -m pytest -v tests

      - name: Run Integration Tests
        run: |
          cd ./apps/node/

          # Run Integration tests
          poetry run coverage run -m pytest -v ../../tests

  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged

    steps:
      - name: checkout
        if: github.event.pull_request.merged
        uses: actions/checkout@v1
        with:
          ref: dev
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build images
        run: |
          sudo apt install gcc
          docker build . --file ./app/websocket/Dockerfile --tag openmined/grid-node:latest
          docker build . --file ./gateway/Dockerfile --tag openmined/grid-gateway:latest
      - name: Push images
        run: |
          docker push openmined/grid-node:latest
          docker push openmined/grid-gateway:latest
